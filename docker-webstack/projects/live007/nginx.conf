# default project
# you can use this example and put in your projects folder under the project name. The file name MUST use nginx.conf
# eg: projects/example/nginx.conf

#
# redirect non ssl ( http ) url to ssl ( https )
# Uncomment this section once your cert is active and then restart your nginx
#
#server {
#        listen 80 default_server;
#        listen [::]:80 default_server;
#        server_name live007.katsini.com;
#        return 301 https://$server_name$request_uri;
#}

server {
        charset utf-8;
        client_max_body_size 128M;
    
        listen 80;
        listen 443 ssl;
    
        server_name live007.katsini.com;
        root        /var/www/projects/live007/src;
        index       index.php;
    
        access_log off;
        error_log   /var/www/projects/logs/live007-error.log;

        ssl_certificate /etc/letsencrypt/live/live007.katsini.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/live007.katsini.com/privkey.pem;

        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location ^~ /.well-known/acme-challenge/ {
            # Set correct content type. According to this:
            # https://community.letsencrypt.org/t/using-the-webroot-domain-verification-method/1445/29
            # Current specification requires "text/plain" or no content header at all.
            # It seems that "text/plain" is a safe option.
            default_type "text/plain";

            root /var/www/certbot;
        }
    
        location / {
            # Redirect everything that isn't a real file to index.php
            try_files $uri $uri/ /index.php$is_args$args;
        }
    
        # uncomment to avoid processing of calls to non-existing static files by Yii
        #location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
        #    try_files $uri =404;
        #}
        #error_page 404 /404.html;

        # deny accessing php files for the /assets directory
        location ~ ^/assets/.*\.php$ {
            deny all;
        }

        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php7.fpm:9000;
            try_files $uri =404;
        }
    
        location ~* /\. {
            deny all;
        }
}
